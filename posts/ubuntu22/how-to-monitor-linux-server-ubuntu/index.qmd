---
title: 自己的地盘，自己看着点
subtitle:  Glance at your liunux server after ssh login
description: 大厂的监控重视让人眼花缭乱，无处入手，何不自己慢慢地搜罗一些看家护院的家伙。
author: "Adopapa"
date: 2024-06-30 16:14:12
categories: [Linux, Server, Monitor]
keywords: [Linux, Server, Monitor]
---

## 起子

习惯登录之后看一下系统显示提醒信息，这不前两天的一个僵尸进程可吓了我一跳(参见[僵尸进程的处理](../../backend/how-to-clean-zombie-process/index.qmd)。于是觉得提升一点监控级别还是有必要的。大厂让人眼花缭乱的监控，可不还是各种开源软件的组合吗？自己也可以动起来。

## 先来一个 neofetch

有事问AI, 尽管其会胡说八道，但是确实一个线索的重要提供者，在于计算机类的信息还是以个蛮不错的开始。爱

![](images/neofetch.png)

## AI的推荐-存档

在 Ubuntu 服务器上，通过 SSH 登录后显示更多的健康监控指标，可以帮助管理员快速了解系统状态。以下是几种配置方法和工具，可用于增强服务器健康监控：

### **方法一：修改 MOTD（Message of the Day）**

Ubuntu 在用户登录时显示 MOTD（消息每日通告），可以通过配置 MOTD 来显示系统健康监控指标。

#### 配置 MOTD

1.  **通过 Landscape 提供的 MOTD（默认）**：

    默认情况下，Ubuntu 服务器使用 `landscape-sysinfo` 生成 MOTD 信息。你可以通过编辑`/etc/update-motd.d`中的文件来自定义登录信息。

    ```         
    sudo nano /etc/update-motd.d/00-header  # 添加定制的 header
    sudo nano /etc/update-motd.d/10-sysinfo  # 定制系统信息
    ```

2.  **添加自定义脚本**：

    你可以创建和添加自定义脚本来显示系统健康信息。在`/etc/update-motd.d/`目录中添加一个新的脚本文件，如：

    ```         
    sudo nano /etc/update-motd.d/20-healthcheck
    ```

    在这个脚本中添加你希望显示的信息。例如，下面是一个示例脚本，用于显示系统负载、磁盘使用情况和内存使用情况：

    ```         
    #!/bin/bash
    echo "System Load: $(uptime)"
    echo "Disk Usage:"
    df -h | grep '^/dev/'
    echo "Memory Usage:"
    free -h
    ```

    确保脚本具有执行权限：

    ```         
    sudo chmod +x /etc/update-motd.d/20-healthcheck
    ```

3.  **更新并查看效果**：

    断开 SSH 会话并重新登录，查看新的 MOTD 信息。

### **方法二：使用 `screenfetch` 或 `neofetch`**

`screenfetch` 和 `neofetch` 是两个广受欢迎的工具，用于在登录时显示系统信息。

#### **安装 `neofetch`**

1.  **安装 neofetch**：

    ```         
    sudo apt update
    sudo apt install neofetch
    ```

2.  **配置 Shell 配置文件**：

    编辑对应的 shell 配置文件（如 `.bashrc` 或 `.zshrc`），使其在登录时自动运行 `neofetch`：

    ```         
    echo "neofetch" >> ~/.bashrc
    source ~/.bashrc
    ```

#### **安装 `screenfetch`**

1.  **安装 screenfetch**：

    ```         
    sudo apt update
    sudo apt install screenfetch
    ```

2.  **配置 Shell 配置文件**：

    编辑对应的 shell 配置文件（如 `.bashrc` 或 `.zshrc`），使其在登录时自动运行 `screenfetch`：

    ```         
    echo "screenfetch" >> ~/.bashrc
    source ~/.bashrc
    ```

### **方法三：使用 `glances` 实时监控**

`glances` 是一个多功能系统监控工具，支持查看多种系统性能指标。

#### **安装 `glances`**

```         
sudo apt update
sudo apt install glances
```

#### **使用 `glances`**

安装完成后，可以通过以下命令启动 `glances`，实时显示系统状态：

```         
glances
```

#### **配置自动启动**

可以在shell配置文件中添加命令来运行 `glances`，例如在 `.bashrc` 中：

```         
echo "glances" >> ~/.bashrc
source ~/.bashrc
```

### **高级监控工具**

1.  **Prometheus + Grafana**：

如果需要更强大的监控解决方案，可以考虑使用 Prometheus 和 Grafana。这两个工具组合可以提供实时系统监控、告警和丰富的仪表盘功能。

```         
- 安装 Prometheus 和 Grafana 的详细步骤可以参考官方文档。

- 配置节点导出器（Node Exporter）来收集系统指标。
```

2.  **Netdata**：

    `Netdata` 也是一个强大的实时监控工具，支持详细的系统性能指标和告警功能。

    ```         
    # 安装 netdata（需要在官方文档中确认推荐的安装方式）
    bash <(curl -Ss https://my-netdata.io/kickstart.sh)
    ```

安装后的 `Netdata` 可以通过 Web 界面访问实时监控信息。

## 
